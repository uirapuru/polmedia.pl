<?php

namespace Dende\PolmediaBundle\Entity;

use Dende\PolmediaBundle\Entity\Video;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Gedmo\Sortable\Entity\Repository\SortableRepository;

/**
 * VideoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideoRepository extends EntityRepository {

    public function getFrontVideos() {
        $qb = $this->createQueryBuilder("v");

        $query = $qb->where("v.type = :header AND v.youtube is null")
                ->orWhere("v.type = :type")
                ->setParameters(array(
                    "type"   => Video::TYPE_FRONT,
                    "header" => Video::TYPE_HEADER
                ))
                ->orderBy("v.order", "ASC")

        ;

        return $query->getQuery()
                        ->execute();
    }

    public function getHeaderVideos() {
        return $this->createQueryBuilder("v")
                        ->where("v.type = :type")
                        ->andWhere("v.youtube is not null")
                        ->orderBy("v.order", "ASC")
                        ->setParameter("type", Video::TYPE_HEADER)
                        ->getQuery()
                        ->execute();
    }

    public function getVideos(Category $category = null) {
        $query = $this->createQueryBuilder("v");
        if ($category)
        {
            $query->where("v.category = :category");
            $query->setParameters(array(
                "category" => $category
            ));
        }
        $query->orderBy("v.order", "ASC");
        return $query->getQuery()->execute();
    }

    public function getAllVideos() {
        return $this->createQueryBuilder("v")
                        ->innerJoin("v.category", "c")
//                        ->orderBy("LENGTH(v.order)", "ASC")
                        ->orderBy('v.order', "ASC")
                        ->getQuery()
                        ->execute();
    }

}
